<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Covid-19 Tracker</title>
    <link rel="stylesheet" href="/css/dashboard.css?version=1.0">
    <script src="/js/4651311c66.js"></script>
</head>
<body>
    <div class="mobile-view">
        <i class="fas fa-desktop desktop"></i>
        <h1 class="no-phone-title">This Website works on <span class="no-phone-title-span">Desktop</span> Only</h1>
    </div>

    <div class="bigsize">
        <!-- TOP BAR container -->
        <div class="top_bar">
            <form action="/">
                <button id="title-name"><span id="title-name-span">COVID-19</span> TRACKER</button>
            </form>
            <div class="timeline-bar">
                <label for="max" id="timeline-covid"> <button id="left-arrow" onclick="leftclick()"><i class="fas fa-angle-left"></i></button> <span id="timeline-start"></span> - <span id="timeline-end">  </span> <button id="right-arrow" onclick="rightclick()"><i class="fas fa-angle-right"></i></button> </label>
                <input type="range" id="max" name="max" min="8" max="" value=0 oninput="datamax(this.value)" onchange="datamax(this.value)">
            </div>
            <div class="drop-box-all">
                <p id="type-select-title">Select Type</p>
                <div class="box-1">
                    <select id="type" name="type" onchange="typeChange(this.value)">
                        <option value="Daily">Daily</option>
                        <option value="Weekly">Weekly</option>
                        <option value="Monthly">Monthly</option>
                    </select>
                </div>
        </div>
        </div>

        <!-- MID BAR container -->
        <div class="mid_bar">
            <div class="numcard">
                <div class="topcard">
                    <p class="cases">Cases</p><p class="date-class" id="date-class1"></p>
                    <p class="all-case" id="total-cases">0</p>
                </div>
                <hr>
                <div class="bottomcard">
                    <p class="type-text">Daily </p><span class="daily-case" id="latest-cases">+0</span>
                </div>
            </div>
            <div class="numcard">
                <div class="topcard">
                    <p class="death">Death</p><p class="date-class"id="date-class2"></p>
                    <p class="all-case" id="total-deaths">0</p>
                </div>
                <hr>
                <div class="bottomcard">
                    <p class="type-text">Daily </p><span class="daily-case" id="latest-deaths">+0</span>
                </div>
            </div>
            <div class="numcard">
                <div class="topcard">
                    <p class="recovery">Recovery</p><p class="date-class" id="date-class3"></p>
                    <p class="all-case" id="total-recs">0</p>
                </div>
                <hr>
                <div class="bottomcard">
                    <p class="type-text">Daily </p><span class="daily-case" id="latest-recs">+0</span>
                </div>
            </div>
            <div class="drop-box">
                <p id="country-select-title">Select Country / Global</p>
                <form action="dashboard" method="POST" class="box">
                    <select id="country" name="country" onchange="CountryChange()">
                        <option value="<%=COUNTRY%>" selected><%=COUNTRY%></option>
                        <%- include('partials/countries-list.ejs') %>
                    </select>
                    <button id="submit-button-arrow"><i class="fas fa-angle-right"></i></button>
                </form>
                <% if(ERRORMSG!="NONE") {%>
                    <p id="country-select-title-error"><%-ERRORMSG%><br>Data Not Available</p>
                <% } %>
        </div>
    </div>

    <!-- GRAPH BAR container -->
    <div class="graph_bar">
        <div class="graph-canvas-main">
            <canvas id="myChart" width="100%" height="30%"></canvas>
        </div>
    </div>

    <!-- FOOTER Area -->
    <footer>Made By <span class="footer-span">MHD IMRAN MOHSIN</span> and <span class="footer-span">BINDUSHREE M</span></footer>

    </div>
<!-- CHARTJS -->
<script src="/js/Chart.bundle.min.js"></script>
<script>
        countryName = document.getElementById('country')
        submitCountryArrow = document.getElementById('submit-button-arrow')
        submitCountryArrow.classList.remove('submit-button-arrow-visible')
        submitCountryArrow.classList.add('submit-button-arrow-hide')

        function CountryChange(){
            if("<%=COUNTRY%>"=="Global") CN = "All"
            else CN = "<%=COUNTRY%>"

            if(countryName.value!=CN){
                submitCountryArrow.classList.add('submit-button-arrow-visible')
                submitCountryArrow.classList.remove('submit-button-arrow-hide')
            }else{
                submitCountryArrow.classList.remove('submit-button-arrow-visible')
                submitCountryArrow.classList.add('submit-button-arrow-hide')
            }
        }
        max_range = document.getElementById('max')

        left_arrow = document.getElementById("left-arrow")
        right_arrow = document.getElementById("right-arrow")

        timeline_start = document.getElementById('timeline-start')
        timeline_end = document.getElementById('timeline-end')

        latest_cases = document.getElementById('latest-cases')
        latest_deaths = document.getElementById('latest-deaths')
        latest_recs = document.getElementById('latest-recs')

        total_cases = document.getElementById('total-cases')
        total_deaths = document.getElementById('total-deaths')
        total_recs = document.getElementById('total-recs')

        date_class1 = document.getElementById('date-class1')
        date_class2 = document.getElementById('date-class2')
        date_class3 = document.getElementById('date-class3')

        type = document.getElementById("type");
        type_text = document.querySelectorAll(".type-text");

        All_Data_Cases = []
        All_Data_Deaths = []
        All_Data_Rec = []
        All_Data_Dates = []

        Total_Data_Cases = []
        Total_Data_Deaths = []
        Total_Data_Recs = []

        MAX_RANGE=8;
        GraphRange=6;

        function typeChange(value){
            for(i in type_text){
                type_text[i].innerHTML = `${value}`;
                max_range.value=0;
            }
            switch(value){
                case "Weekly":
                    All_Data_Cases = [<%=case_data_arr_week%>];
                    All_Data_Deaths = [<%=death_data_arr_week%>];
                    All_Data_Rec = [<%=rec_data_arr_week%>];
                    All_Data_Dates = <%- JSON.stringify(labels_arr_week) %>;

                    Total_Data_Cases = [<%=total_case_data_arr_week%>];
                    Total_Data_Deaths = [<%=total_death_data_arr_week%>];
                    Total_Data_Recs = [<%=total_rec_data_arr_week%>];
                    max_range.max = <%=WEEKS%> + GraphRange;
                break;
                case "Monthly":
                    All_Data_Cases = [<%=case_data_arr_month%>];
                    All_Data_Deaths = [<%=death_data_arr_month%>];
                    All_Data_Rec = [<%=rec_data_arr_month%>];
                    All_Data_Dates = <%- JSON.stringify(labels_arr_month) %>;

                    Total_Data_Cases = [<%=total_case_data_arr_month%>];
                    Total_Data_Deaths = [<%=total_death_data_arr_month%>];
                    Total_Data_Recs = [<%=total_rec_data_arr_month%>];
                    max_range.max = <%=MONTHS%> + GraphRange;
                break;
                case "Daily":
                default:
                    All_Data_Cases = [<%=case_data_arr_day%>]  ; 
                    All_Data_Deaths = [<%=death_data_arr_day%>];
                    All_Data_Rec = [<%=rec_data_arr_day%>];
                    All_Data_Dates = <%- JSON.stringify(labels_arr_day) %>;

                    Total_Data_Cases = [<%=total_case_data_arr_day%>];
                    Total_Data_Deaths = [<%=total_death_data_arr_day%>];
                    Total_Data_Recs = [<%=total_rec_data_arr_day%>];
                    max_range.max = <%=DAYS%> + GraphRange;
            }
            console.log(All_Data_Dates[All_Data_Dates.length-1])
            max_range.max=All_Data_Cases.length+GraphRange
            datamax(8,value)
        }

        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        var myChart=null;

        createChart = async() => {
            if(myChart!=null){
                myChart.destroy();
            }
            var ctx = document.getElementById('myChart').getContext('2d');
            myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: Data_Dates,
                    datasets: [
                        {
                        label: 'Deaths',
                        data: Data_Deaths,
                        backgroundColor: 'rgb(255, 0, 34, 0.1)',
                        borderColor: 'rgb(255, 0, 34)',
                        borderWidth: 3,
                        pointHoverBackgroundColor:"rgb(255, 0, 34)",
                        pointHoverRadius:7,
                    },{
                        label: 'Recovery',
                        data: Data_Rec,
                        backgroundColor: 'rgb(16, 255, 0, 0.1)',
                        borderColor: 'rgb(16, 255, 0)',
                        borderWidth: 3,
                        pointHoverBackgroundColor:"rgb(16, 255, 0)",
                        pointHoverRadius:7,
                    },
                    {
                        label: 'Cases',
                        data: Data_Cases,
                        backgroundColor: 'rgb(255, 221, 0, 0.1)',
                        borderColor: 'rgb(255, 221, 0)',
                        borderWidth: 3,
                        pointHoverBackgroundColor:"rgb(255, 221, 0)",
                        pointHoverRadius:7,
                    }]
                },
                options: {
                    legend: {
                        labels: {
                            fontColor: 'white',
                            fontSize:14,
                            usePointStyle:true,
                        }
                    },
                    animation: {
                            duration: 0 // general animation time
                        },
                    hover: {
                        animationDuration: 250 // duration of animations when hovering an item
                    },
                    responsiveAnimationDuration: 1000,
                    tooltips: {
                        mode: 'index',
                        position:"average",
                        titleFontSize:12
                    }
                }
            });
        }

        window.addEventListener("keydown", function (event) {
            if (event.defaultPrevented) {
                return;
            }
            switch (event.key) {
                case "ArrowLeft": leftclick()
                break;
                case "ArrowRight": rightclick()
                break;
                default:
                return; 
            }
            event.preventDefault();
            }, true);

        function leftclick(){
            if(parseInt(max_range.value)>8)  max_range.value--
            datamax(max_range.value)
            left_arrow.focus()
        }

        function rightclick(){
            if(parseInt(max_range.value)<All_Data_Cases.length+GraphRange)  max_range.value++
            datamax(max_range.value)
            right_arrow.focus()
        }

        function datamax(value,type){
            let newval = value
            if(value>=All_Data_Cases.length) value = All_Data_Cases.length

            MAX_RANGE=value;
            if(type==="Daily"){
                Data_Cases = All_Data_Cases.slice(MAX_RANGE-8,MAX_RANGE-1)
                Data_Deaths = All_Data_Deaths.slice(MAX_RANGE-8,MAX_RANGE-1)
                Data_Rec = All_Data_Rec.slice(MAX_RANGE-8,MAX_RANGE-1)
                Data_Dates = All_Data_Dates.slice(MAX_RANGE-8,MAX_RANGE-1)

                TData_Cases = Total_Data_Cases.slice(MAX_RANGE-8,MAX_RANGE-1)
                TData_Deaths = Total_Data_Deaths.slice(MAX_RANGE-8,MAX_RANGE-1)
                TData_Rec = Total_Data_Recs.slice(MAX_RANGE-8,MAX_RANGE-1)
            } else {
                Data_Cases = All_Data_Cases.slice(MAX_RANGE-7,MAX_RANGE)
                Data_Deaths = All_Data_Deaths.slice(MAX_RANGE-7,MAX_RANGE)
                Data_Rec = All_Data_Rec.slice(MAX_RANGE-7,MAX_RANGE)
                Data_Dates = All_Data_Dates.slice(MAX_RANGE-7,MAX_RANGE)

                TData_Cases = Total_Data_Cases.slice(MAX_RANGE-7,MAX_RANGE)
                TData_Deaths = Total_Data_Deaths.slice(MAX_RANGE-7,MAX_RANGE)
                TData_Rec = Total_Data_Recs.slice(MAX_RANGE-7,MAX_RANGE)
            }

            timeline_start.innerHTML = Data_Dates[0];
            timeline_end.innerHTML = Data_Dates[Data_Dates.length-1];

            if(newval==All_Data_Cases.length+GraphRange){
                timeline_end.style.color = "red"
            } 
            else if(newval==8){
                timeline_start.style.color = "red"
                timeline_end.style.color = "white"
            } 
            else {
                timeline_start.style.color = "white"
                timeline_end.style.color = "white"
            }
    
            if(newval>value) {
                modIndex = newval%value
                date_class1.innerHTML = `On ${Data_Dates[modIndex]}`;
                date_class2.innerHTML = `On ${Data_Dates[modIndex]}`;
                date_class3.innerHTML = `On ${Data_Dates[modIndex]}`;

                if(parseInt(Data_Cases[0])>=0) latest_cases.innerHTML = `+${numberWithCommas(Data_Cases[modIndex])}`;
                else latest_cases.innerHTML = `${numberWithCommas(Data_Cases[modIndex])}`;
                if(parseInt(Data_Deaths[0])>=0) latest_deaths.innerHTML = `+${numberWithCommas(Data_Deaths[modIndex])}`;
                else latest_deaths.innerHTML = `${numberWithCommas(Data_Deaths[modIndex])}`;
                if(parseInt(Data_Rec[0])>=0) latest_recs.innerHTML = `+${numberWithCommas(Data_Rec[modIndex])}`
                else latest_recs.innerHTML = `${numberWithCommas(Data_Rec[modIndex])}`

                total_cases.innerHTML = numberWithCommas(TData_Cases[modIndex]);
                total_deaths.innerHTML = numberWithCommas(TData_Deaths[modIndex]);
                total_recs.innerHTML = numberWithCommas(TData_Rec[modIndex]);
            } else {
                date_class1.innerHTML = `On ${Data_Dates[0]}`;
                date_class2.innerHTML = `On ${Data_Dates[0]}`;
                date_class3.innerHTML = `On ${Data_Dates[0]}`;

                if(parseInt(Data_Cases[0])>=0) latest_cases.innerHTML = `+${numberWithCommas(Data_Cases[0])}`;
                else latest_cases.innerHTML = `${numberWithCommas(Data_Cases[0])}`;
                if(parseInt(Data_Deaths[0])>=0) latest_deaths.innerHTML = `+${numberWithCommas(Data_Deaths[0])}`;
                else latest_deaths.innerHTML = `${numberWithCommas(Data_Deaths[0])}`;
                if(parseInt(Data_Rec[0])>=0) latest_recs.innerHTML = `+${numberWithCommas(Data_Rec[0])}`
                else latest_recs.innerHTML = `${numberWithCommas(Data_Rec[0])}`

                total_cases.innerHTML = numberWithCommas(TData_Cases[0]);
                total_deaths.innerHTML = numberWithCommas(TData_Deaths[0]);
                total_recs.innerHTML = numberWithCommas(TData_Rec[0]);
            }

            createChart()
        }

        typeChange("Daily")
</script>
</body>
</html>